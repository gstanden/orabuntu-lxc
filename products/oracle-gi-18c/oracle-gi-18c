#!/bin/bash

#    Copyright 2015-2018 Gilbert Standen
#    This file is part of Orabuntu-LXC.

#    Orabuntu-LXC is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.

#    Orabuntu-LXC is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.

#    You should have received a copy of the GNU General Public License
#    along with Orabuntu-LXC.  If not, see <http://www.gnu.org/licenses/>.

#    v2.4 		GLS 20151224
#    v2.8 		GLS 20151231
#    v3.0 		GLS 20160710 Updates for Ubuntu 16.04
#    v4.0 		GLS 20161025 DNS DHCP services moved into an LXC container
#    v5.0 		GLS 20170909 Orabuntu-LXC Multi-Host
#    v6.0-AMIDE-beta	GLS 20180106 Orabuntu-LXC AmazonS3 Multi-Host Docker Enterprise Edition (AMIDE)

#    Note that this software builds a containerized DNS DHCP solution (bind9 / isc-dhcp-server).
#    The nameserver should NOT be the name of an EXISTING nameserver but an arbitrary name because this software is CREATING a new LXC-containerized nameserver.
#    The domain names can be arbitrary fictional names or they can be a domain that you actually own and operate.
#    There are two domains and two networks because the "seed" LXC containers are on a separate network from the production LXC containers.
#    If the domain is an actual domain, you will need to change the subnet using the subnets feature of Orabuntu-LXC

clear

MajorRelease=$1
PointRelease=$2
OracleRelease=$1$2
OracleVersion=$1.$2
Domain1=$3
Domain2=$4
NameServer=$5
OSMemRes=$6
MultiHost=$7
LxcOvsVersion=$8
DistDir=$9
SubDirName=${10}

BEXT=`date +"%Y%m%d%H%M"`

function GetNameServerBase {
        echo $NameServer | cut -f1 -d'-'
}
NameServerBase=$(GetNameServerBase)

function GetGroup {
        id | cut -f2 -d' ' | cut -f2 -d'(' | cut -f1 -d')'
}
Group=$(GetGroup)

function GetOwner {
        id | cut -f1 -d' ' | cut -f2 -d'(' | cut -f1 -d')'
}
Owner=$(GetOwner)

function GetLxcVersion {
	echo $LxcOvsVersion | cut -f1 -d':'
}
LxcVersion=$(GetLxcVersion)

function GetOvsVersion {
	echo $LxcOvsVersion | cut -f2 -d':'
}
OvsVersion=$(GetOvsVersion)

function GetMultiHostVar2 {
	echo $MultiHost | cut -f2 -d':'
}
MultiHostVar2=$(GetMultiHostVar2)

function GetMultiHostVar3 {
	echo $MultiHost | cut -f3 -d':'
}
MultiHostVar3=$(GetMultiHostVar3)

function GetMultiHostVar4 {
	echo $MultiHost | cut -f4 -d':'
}
MultiHostVar4=$(GetMultiHostVar4)

function GetMultiHostVar5 {
	echo $MultiHost | cut -f5 -d':'
}
MultiHostVar5=$(GetMultiHostVar5)

function GetMultiHostVar6 {
	echo $MultiHost | cut -f6 -d':'
}
MultiHostVar6=$(GetMultiHostVar6)

function GetMultiHostVar7 {
	echo $MultiHost | cut -f7 -d':'
}
MultiHostVar7=$(GetMultiHostVar7)

function GetMultiHostVar8 {
	echo $MultiHost | cut -f8 -d':'
}
MultiHostVar8=$(GetMultiHostVar8)

function GetMultiHostVar9 {
	echo $MultiHost | cut -f9 -d':'
}
MultiHostVar9=$(GetMultiHostVar9)

function GetMultiHostVar10 {
	echo $MultiHost | cut -f10 -d':'
}
MultiHostVar10=$(GetMultiHostVar10)
GRE=$MultiHostVar10

function CheckSystemdResolvedInstalled {
        sudo netstat -ulnp | grep 53 | sed 's/  */ /g' | rev | cut -f1 -d'/' | rev | sort -u | grep systemd- | wc -l
}
SystemdResolvedInstalled=$(CheckSystemdResolvedInstalled)

function CheckNetworkManagerRunning {
	ps -ef | grep NetworkManager | grep -v grep | wc -l
}
NetworkManagerRunning=$(CheckNetworkManagerRunning)

GetLinuxFlavors(){
if   [[ -e /etc/oracle-release ]]
then
        LinuxFlavors=$(cat /etc/oracle-release | cut -f1 -d' ')
elif [[ -e /etc/redhat-release ]]
then
        LinuxFlavors=$(cat /etc/redhat-release | cut -f1 -d' ')
elif [[ -e /usr/bin/lsb_release ]]
then
        LinuxFlavors=$(lsb_release -d | awk -F ':' '{print $2}' | cut -f1 -d' ')
elif [[ -e /etc/issue ]]
then
        LinuxFlavors=$(cat /etc/issue | cut -f1 -d' ')
else
        LinuxFlavors=$(cat /proc/version | cut -f1 -d' ')
fi
}
GetLinuxFlavors

function TrimLinuxFlavors {
echo $LinuxFlavors | sed 's/^[ \t]//;s/[ \t]$//'
}
LinuxFlavor=$(TrimLinuxFlavors)

if   [ $LinuxFlavor = 'Oracle' ]
then
        CutIndex=7
        function GetRedHatVersion {
                sudo cat /etc/redhat-release | cut -f"$CutIndex" -d' ' | cut -f1 -d'.'
        }
        RedHatVersion=$(GetRedHatVersion)
	RHV=$RedHatVersion
        function GetOracleDistroRelease {
                sudo cat /etc/oracle-release | cut -f5 -d' ' | cut -f1 -d'.'
        }
        OracleDistroRelease=$(GetOracleDistroRelease)
        Release=$OracleDistroRelease
        LF=$LinuxFlavor
        RL=$Release
elif [ $LinuxFlavor = 'Red' ] || [ $LinuxFlavor = 'CentOS' ]
then
        if   [ $LinuxFlavor = 'Red' ]
        then
                CutIndex=7
        elif [ $LinuxFlavor = 'CentOS' ]
        then
                CutIndex=4
        fi
        function GetRedHatVersion {
                sudo cat /etc/redhat-release | cut -f"$CutIndex" -d' ' | cut -f1 -d'.'
        }
        RedHatVersion=$(GetRedHatVersion)
	RHV=$RedHatVersion
        Release=$RedHatVersion
        LF=$LinuxFlavor
        RL=$Release
elif [ $LinuxFlavor = 'Fedora' ]
then
        CutIndex=3
        function GetRedHatVersion {
                sudo cat /etc/redhat-release | cut -f"$CutIndex" -d' ' | cut -f1 -d'.'
        }
        RedHatVersion=$(GetRedHatVersion)
	RHV=$RedHatVersion
        if [ $RedHatVersion -ge 19 ]
        then
                Release=7
        elif [ $RedHatVersion -ge 12 ] && [ $RedHatVersion -le 18 ]
        then
                Release=6
        fi
        LF=$LinuxFlavor
        RL=$Release
elif [ $LinuxFlavor = 'Ubuntu' ]
then
        function GetUbuntuVersion {
                cat /etc/lsb-release | grep DISTRIB_RELEASE | cut -f2 -d'='
        }
        UbuntuVersion=$(GetUbuntuVersion)
        LF=$LinuxFlavor
        RL=$UbuntuVersion
        function GetUbuntuMajorVersion {
                cat /etc/lsb-release | grep DISTRIB_RELEASE | cut -f2 -d'=' | cut -f1 -d'.'
        }
        UbuntuMajorVersion=$(GetUbuntuMajorVersion)
fi

if [ $Release -ge 7 ]
then
	function CheckLxcNetRunning {
		sudo systemctl | grep lxc-net | grep 'loaded active exited' | wc -l
	}
	LxcNetRunning=$(CheckLxcNetRunning)
fi

function GetOperation {
echo $MultiHost | cut -f1 -d':'
}
Operation=$(GetOperation)

function GetSeedContainerName {
        sudo lxc-ls -f | grep oel$OracleRelease | cut -f1 -d' '
}
SeedContainerName=$(GetSeedContainerName)

function GetSeedPostfix {
        sudo lxc-ls -f | grep oel"$OracleRelease"c | cut -f1 -d' ' | cut -f2 -d'c' | sed 's/^/c/'
}
SeedPostfix=$(GetSeedPostfix)

echo ''
echo "=============================================="
echo "Script: Oracle 18c GI and DB Prerequisites.   "
echo "=============================================="
echo ''

sleep 5

clear

echo ''
echo "=============================================="
echo "Creating /etc/sysctl.d/60-oracle.conf file ..."
echo "=============================================="
echo ''
echo "=============================================="
echo "These values are set automatically based on   "
echo "Oracle best practice guidelines.              "
echo "You can adjust them after installation.       "
echo "=============================================="
echo ''

if [ -r /etc/sysctl.d/60-oracle.conf ]
then
sudo cp -p /etc/sysctl.d/60-oracle.conf /etc/sysctl.d/60-oracle.conf.pre.orabuntu-lxc.bak
sudo rm /etc/sysctl.d/60-oracle.conf
fi

sudo touch /etc/sysctl.d/60-oracle.conf
sudo cat /etc/sysctl.d/60-oracle.conf
sudo chmod +x /etc/sysctl.d/60-oracle.conf

echo 'Linux OS Memory Reservation (in Kb) ... '$OSMemRes 
function GetMemTotal {
sudo cat /proc/meminfo | grep MemTotal | cut -f2 -d':' |  sed 's/  *//g' | cut -f1 -d'k'
}
MemTotal=$(GetMemTotal)
echo 'Memory (in Kb) ........................ '$MemTotal

((MemOracleKb = MemTotal - OSMemRes))
echo 'Memory for Oracle (in Kb) ............. '$MemOracleKb

((MemOracleBytes = MemOracleKb * 1024))
echo 'Memory for Oracle (in bytes) .......... '$MemOracleBytes

function GetPageSize {
sudo getconf PAGE_SIZE
}
PageSize=$(GetPageSize)
echo 'Page Size (in bytes) .................. '$PageSize

((shmall = MemOracleBytes / 4096))
echo 'shmall (in 4Kb pages) ................. '$shmall
sudo sysctl -q -w kernel.shmall=$shmall 

((shmmax = MemOracleBytes / 2))
echo 'shmmax (in bytes) ..................... '$shmmax
sudo sysctl -q -w kernel.shmmax=$shmmax

sudo sh -c "echo '# New Stack Settings'                       > /etc/sysctl.d/60-oracle.conf"
sudo sh -c "echo ''                                          >> /etc/sysctl.d/60-oracle.conf"
sudo sh -c "echo 'net.ipv4.conf.default.rp_filter=0'         >> /etc/sysctl.d/60-oracle.conf"
sudo sh -c "echo 'net.ipv4.conf.all.rp_filter=0'             >> /etc/sysctl.d/60-oracle.conf"
sudo sh -c "echo 'net.ipv4.ip_forward=1'                     >> /etc/sysctl.d/60-oracle.conf"
sudo sh -c "echo ''                                          >> /etc/sysctl.d/60-oracle.conf"
sudo sh -c "echo '# Oracle Settings'                         >> /etc/sysctl.d/60-oracle.conf"
sudo sh -c "echo ''                                          >> /etc/sysctl.d/60-oracle.conf"
sudo sh -c "echo 'kernel.shmall = $shmall'                   >> /etc/sysctl.d/60-oracle.conf"
sudo sh -c "echo 'kernel.shmmax = $shmmax'                   >> /etc/sysctl.d/60-oracle.conf"
sudo sh -c "echo 'kernel.shmmni = 4096'                      >> /etc/sysctl.d/60-oracle.conf"
sudo sh -c "echo 'kernel.sem = 250 32000 100 128'            >> /etc/sysctl.d/60-oracle.conf"
sudo sh -c "echo 'fs.file-max = 6815744'                     >> /etc/sysctl.d/60-oracle.conf"
sudo sh -c "echo 'fs.aio-max-nr = 1048576'                   >> /etc/sysctl.d/60-oracle.conf"
sudo sh -c "echo 'net.ipv4.ip_local_port_range = 9000 65500' >> /etc/sysctl.d/60-oracle.conf"
sudo sh -c "echo 'net.core.rmem_default = 262144'            >> /etc/sysctl.d/60-oracle.conf"
sudo sh -c "echo 'net.core.rmem_max = 4194304'               >> /etc/sysctl.d/60-oracle.conf"
sudo sh -c "echo 'net.core.wmem_default = 262144'            >> /etc/sysctl.d/60-oracle.conf"
sudo sh -c "echo 'net.core.wmem_max = 1048576'               >> /etc/sysctl.d/60-oracle.conf"
sudo sh -c "echo 'kernel.panic_on_oops = 1'                  >> /etc/sysctl.d/60-oracle.conf"

echo ''
echo "=============================================="
echo "Created /etc/sysctl.d/60-oracle.conf file ... "
echo "=============================================="

sleep 5

clear

echo ''
echo "=============================================="
echo "Display /etc/sysctl.d/60-oracle.conf          "
echo "=============================================="
echo ''

sudo sysctl -p /etc/sysctl.d/60-oracle.conf

echo ''
echo "=============================================="
echo "Displayed /etc/sysctl.d/60-oracle.conf file.  "
echo "=============================================="

sleep 5

clear

if [ $LinuxFlavor = 'Ubuntu' ]
then
	if [ $UbuntuMajorVersion -ge 15 ]
	then
		echo ''
		echo "=============================================="
		echo "Create 60-oracle.service in systemd...        "
		echo "=============================================="
		echo ''

		if [ ! -f /etc/systemd/system/60-oracle.service ]
		then
			sudo sh -c "echo '[Unit]'                                    			 > /etc/systemd/system/60-oracle.service"
			sudo sh -c "echo 'Description=60-oracle Service'            			>> /etc/systemd/system/60-oracle.service"
			sudo sh -c "echo 'After=network.target'                     			>> /etc/systemd/system/60-oracle.service"
			sudo sh -c "echo ''                                         			>> /etc/systemd/system/60-oracle.service"
			sudo sh -c "echo '[Service]'                                			>> /etc/systemd/system/60-oracle.service"
			sudo sh -c "echo 'Type=oneshot'                             			>> /etc/systemd/system/60-oracle.service"
			sudo sh -c "echo 'User=root'                                			>> /etc/systemd/system/60-oracle.service"
			sudo sh -c "echo 'RemainAfterExit=yes'                      			>> /etc/systemd/system/60-oracle.service"
			sudo sh -c "echo 'ExecStart=/usr/sbin/sysctl -p /etc/sysctl.d/60-oracle.conf'	>> /etc/systemd/system/60-oracle.service"
			sudo sh -c "echo ''                                         			>> /etc/systemd/system/60-oracle.service"
			sudo sh -c "echo '[Install]'                                			>> /etc/systemd/system/60-oracle.service"
			sudo sh -c "echo 'WantedBy=multi-user.target'               			>> /etc/systemd/system/60-oracle.service"

			sudo chmod 644 /etc/systemd/system/60-oracle.service
			sudo systemctl enable 60-oracle
		fi

		sudo cat /etc/systemd/system/60-oracle.service

		echo ''
		echo "=============================================="
		echo "Created 60-oracle.service in systemd.         "
		echo "=============================================="
	fi
fi

if [ $LinuxFlavor = 'Oracle' ] || [ $LinuxFlavor = 'CentOS' ] || [ $LinuxFlavor = 'Red' ]
then
	if [ $Release -ge 7 ]
	then
		echo ''
		echo "=============================================="
		echo "Create 60-oracle.service in systemd...        "
		echo "=============================================="
		echo ''

		if [ ! -f /etc/systemd/system/60-oracle.service ]
		then
			sudo sh -c "echo '[Unit]'                                    			 > /etc/systemd/system/60-oracle.service"
			sudo sh -c "echo 'Description=60-oracle Service'            			>> /etc/systemd/system/60-oracle.service"
			sudo sh -c "echo 'After=network.target'                     			>> /etc/systemd/system/60-oracle.service"
			sudo sh -c "echo ''                                         			>> /etc/systemd/system/60-oracle.service"
			sudo sh -c "echo '[Service]'                                			>> /etc/systemd/system/60-oracle.service"
			sudo sh -c "echo 'Type=oneshot'                             			>> /etc/systemd/system/60-oracle.service"
			sudo sh -c "echo 'User=root'                                			>> /etc/systemd/system/60-oracle.service"
			sudo sh -c "echo 'RemainAfterExit=yes'                      			>> /etc/systemd/system/60-oracle.service"
			sudo sh -c "echo 'ExecStart=/usr/sbin/sysctl -p /etc/sysctl.d/60-oracle.conf'	>> /etc/systemd/system/60-oracle.service"
			sudo sh -c "echo ''                                         			>> /etc/systemd/system/60-oracle.service"
			sudo sh -c "echo '[Install]'                                			>> /etc/systemd/system/60-oracle.service"
			sudo sh -c "echo 'WantedBy=multi-user.target'               			>> /etc/systemd/system/60-oracle.service"

			sudo chmod 644 /etc/systemd/system/60-oracle.service
			sudo systemctl enable 60-oracle
		fi

		sudo cat /etc/systemd/system/60-oracle.service

		echo ''
		echo "=============================================="
		echo "Created 60-oracle.service in systemd.         "
		echo "=============================================="
	fi
fi

sleep 5

clear

echo ''
echo "=============================================="
echo "Creating /etc/security/limits.d/70-oracle.conf"
echo "=============================================="
echo ''
echo "=============================================="
echo "These values are set automatically based on   "
echo "Oracle best practice guidelines.              "
echo "You can adjust them after installation.       "
echo "=============================================="
echo ''

sudo touch /etc/security/limits.d/70-oracle.conf
sudo chmod +x /etc/security/limits.d/70-oracle.conf

# Oracle Kernel Parameters

sudo sh -c "echo '#                                        '  > /etc/security/limits.d/70-oracle.conf"
sudo sh -c "echo '# Oracle DB Parameters                   ' >> /etc/security/limits.d/70-oracle.conf"
sudo sh -c "echo '#                                        ' >> /etc/security/limits.d/70-oracle.conf"
sudo sh -c "echo 'oracle	soft	nproc       2047   ' >> /etc/security/limits.d/70-oracle.conf"
sudo sh -c "echo 'oracle	hard	nproc      16384   ' >> /etc/security/limits.d/70-oracle.conf"
sudo sh -c "echo 'oracle	soft	nofile      1024   ' >> /etc/security/limits.d/70-oracle.conf"
sudo sh -c "echo 'oracle	hard	nofile     65536   ' >> /etc/security/limits.d/70-oracle.conf"
sudo sh -c "echo 'oracle	soft	stack      10240   ' >> /etc/security/limits.d/70-oracle.conf"
sudo sh -c "echo 'oracle	hard	stack      10240   ' >> /etc/security/limits.d/70-oracle.conf"
sudo sh -c "echo '* 	soft 	memlock  9873408           ' >> /etc/security/limits.d/70-oracle.conf"
sudo sh -c "echo '* 	hard 	memlock  9873408           ' >> /etc/security/limits.d/70-oracle.conf"

# Oracle Grid Infrastructure Kernel Parameters
	
sudo sh -c "echo '#                                        ' >> /etc/security/limits.d/70-oracle.conf"
sudo sh -c "echo '# Oracle GI Parameters                   ' >> /etc/security/limits.d/70-oracle.conf"
sudo sh -c "echo '#                                        ' >> /etc/security/limits.d/70-oracle.conf"
sudo sh -c "echo 'grid	soft	nproc       2047           ' >> /etc/security/limits.d/70-oracle.conf"
sudo sh -c "echo 'grid	hard	nproc      16384           ' >> /etc/security/limits.d/70-oracle.conf"
sudo sh -c "echo 'grid	soft	nofile      1024           ' >> /etc/security/limits.d/70-oracle.conf"
sudo sh -c "echo 'grid	hard	nofile     65536           ' >> /etc/security/limits.d/70-oracle.conf"
sudo sh -c "echo 'grid	soft	stack      10240           ' >> /etc/security/limits.d/70-oracle.conf"
sudo sh -c "echo 'grid	hard	stack      10240           ' >> /etc/security/limits.d/70-oracle.conf"

echo "=============================================="
echo "Display /etc/security/limits.d/70-oracle.conf "
echo "=============================================="
echo ''
sudo cat /etc/security/limits.d/70-oracle.conf
echo ''
echo "=============================================="
echo "Created /etc/security/limits.d/70-oracle.conf "
echo "=============================================="
echo ''

sleep 5

clear

if [ $LinuxFlavor = 'Ubuntu' ]
then
	if [ $UbuntuMajorVersion -ge 15 ] && [ -f /etc/systemd/system.conf ]
	then
		echo ''
		echo "=============================================="
		echo "Configure NOFILES Hard Limit...               "
		echo "=============================================="
		echo ''

		sudo sed -i '/#DefaultLimitNOFILE=/s/#DefaultLimitNOFILE=/DefaultLimitNOFILE=/g'	/etc/systemd/system.conf
		sudo sed -i '/DefaultLimitNOFILE=/s/=.*/=4096:65536/g'					/etc/systemd/system.conf
		sudo cat										/etc/systemd/system.conf | grep DefaultLimitNOFILE

		echo ''
		echo "=============================================="
		echo "Done: Configure NOFILES Hard Limit.           "
		echo "=============================================="
		echo ''
	fi
fi

sleep 5

clear

echo ''
echo "=============================================="
echo "Verify existence of Oracle and Grid users...  "
echo "=============================================="
echo ''

sudo useradd  -u 1098 grid 		>/dev/null 2>&1
sudo useradd  -u 1100 oracle 		>/dev/null 2>&1
sudo groupadd -g 1100 asmadmin		>/dev/null 2>&1
sudo usermod  -a -G   asmadmin grid	>/dev/null 2>&1

id grid
id oracle

echo ''
echo "=============================================="
echo "Existence of Oracle and Grid users verified.  "
echo "=============================================="

sleep 5

clear

echo ''
echo "=============================================="
echo "Establish sudo privileges...                  "
echo "=============================================="
echo ''

echo $MultiHostVar4 | sudo -S date

echo ''
echo "=============================================="
echo "Privileges established.                       "
echo "=============================================="

sleep 5

clear

echo ''
echo "=============================================="
echo "Extract Oracle-db configs to container...     "
echo "=============================================="
echo ''

sudo mkdir -p /var/lib/lxc/oel$OracleRelease$SeedPostfix
sudo tar -xvf /opt/olxc/"$DistDir"/"$SubDirName"/archives/product.tar -C /var/lib/lxc/oel$OracleRelease$SeedPostfix --touch

sudo chown root:root /var/lib/lxc/oel$OracleRelease$SeedPostfix/rootfs/root/hugepages_setting.sh
sudo chmod 755 /var/lib/lxc/oel$OracleRelease$SeedPostfix/rootfs/root/hugepages_setting.sh
sudo chown root:root /var/lib/lxc/oel$OracleRelease$SeedPostfix/rootfs/root/packages.sh
sudo chmod 755 /var/lib/lxc/oel$OracleRelease$SeedPostfix/rootfs/root/packages.sh
sudo chown root:root /var/lib/lxc/oel$OracleRelease$SeedPostfix/rootfs/root/create_directories.sh
sudo chmod 755 /var/lib/lxc/oel$OracleRelease$SeedPostfix/rootfs/root/create_directories.sh
sudo chown root:root /var/lib/lxc/oel$OracleRelease$SeedPostfix/rootfs/root/lxc-services.sh
sudo chmod 755 /var/lib/lxc/oel$OracleRelease$SeedPostfix/rootfs/root/lxc-services.sh
sudo chown root:root /var/lib/lxc/oel$OracleRelease$SeedPostfix/rootfs/root/create_users.sh
sudo chmod 755 /var/lib/lxc/oel$OracleRelease$SeedPostfix/rootfs/root/create_users.sh

echo ''
echo "=============================================="
echo "Done: Extract Oracle-db configs to container. "
echo "=============================================="

sleep 5

clear

echo ''
echo "=============================================="
echo "$SeedContainerName Oracle GI 18c config       "
echo "=============================================="
echo ''
echo "=============================================="
echo "Note: sendmail install takes awhile (patience)"
echo "The install may seem to hang at sendmail...   "
echo "Give it a minute or two...it's working        "
echo "=============================================="
echo ''

sleep 5

sudo lxc-attach -n $SeedContainerName -- /root/packages.sh
sudo lxc-attach -n $SeedContainerName -- /root/create_users.sh
sudo lxc-attach -n $SeedContainerName -- /root/lxc-services.sh
sudo lxc-attach -n $SeedContainerName -- /root/create_directories.sh
sudo lxc-attach -n $SeedContainerName -- usermod --password `perl -e "print crypt('grid','grid');"` grid
sudo lxc-attach -n $SeedContainerName -- usermod --password `perl -e "print crypt('oracle','oracle');"` oracle
sudo lxc-attach -n $SeedContainerName -- usermod --password `perl -e "print crypt('root','root');"` root 
sudo lxc-attach -n $SeedContainerName -- usermod -g oinstall oracle

# The Oracle Linux images that LXC is using apparently don't have an oracle user so for now just redirecting this to avoid error messages on the chown.
# Longer-term need to decide whether to go ahead and create the oracle user on the images as is done with grid.
# This would require making some decisions about what groups, uid to assign, so its debateable whether to automate this or leave it to end user to create oracle (or another user) to own the database install.
# GLS 2020-04-28

sudo lxc-attach -n $SeedContainerName -- chown oracle:oinstall /home/oracle/.bash_profile	> /dev/null 2>&1
sudo lxc-attach -n $SeedContainerName -- chown oracle:oinstall /home/oracle/.bashrc		> /dev/null 2>&1
sudo lxc-attach -n $SeedContainerName -- chown oracle:oinstall /home/oracle/.kshrc		> /dev/null 2>&1
sudo lxc-attach -n $SeedContainerName -- chown oracle:oinstall /home/oracle/.bash_logout	> /dev/null 2>&1
sudo lxc-attach -n $SeedContainerName -- chown oracle:oinstall /home/oracle/.			> /dev/null 2>&1
sudo lxc-attach -n $SeedContainerName -- chown grid:oinstall /home/grid/.bash_profile
sudo lxc-attach -n $SeedContainerName -- chown grid:oinstall /home/grid/.bashrc
sudo lxc-attach -n $SeedContainerName -- chown grid:oinstall /home/grid/.kshrc
sudo lxc-attach -n $SeedContainerName -- chown grid:oinstall /home/grid/.bash_logout
sudo lxc-attach -n $SeedContainerName -- chown grid:oinstall /home/grid/.

sudo cp -p /var/lib/lxc/$SeedContainerName/config 				/var/lib/lxc/$SeedContainerName/config.$BEXT
sudo cp -p /var/lib/lxc/$SeedContainerName/rootfs/config.asm.flex.cluster	/var/lib/lxc/$SeedContainerName/config.asm.flex.cluster
sudo sed -i "s/MtuSetting/9000/g" 	  	  				/var/lib/lxc/$SeedContainerName/config.asm.flex.cluster
sudo sed -i "s/ContainerName/$SeedContainerName/g" 				/var/lib/lxc/$SeedContainerName/config.asm.flex.cluster
sudo bash -c "cat /var/lib/lxc/$SeedContainerName/config 			/var/lib/lxc/$SeedContainerName/config.asm.flex.cluster > /var/lib/lxc/$SeedContainerName/config.ora-gi-18c"
sudo cp -p /var/lib/lxc/$SeedContainerName/config.ora-gi-18c			/var/lib/lxc/$SeedContainerName/config
sudo sed -i '/supersede/{/oracle-gi/!d;}'					/var/lib/lxc/$SeedContainerName/rootfs/etc/dhcp/dhclient.conf
sudo sed -i 's/# oracle-gi //g'							/var/lib/lxc/$SeedContainerName/rootfs/etc/dhcp/dhclient.conf


if [ $LinuxFlavor = 'Ubuntu' ]
then
	sudo sh -c "echo 'lxc.apparmor.profile = unconfined'		     >>	/var/lib/lxc/$SeedContainerName/config"
fi

# GLS 20170927 credit yairchu
function SoftwareVersion { echo "$@" | awk -F. '{ printf("%d%03d%03d%03d\n", $1,$2,$3,$4); }'; }

if [ $(SoftwareVersion $LxcVersion) -ge $(SoftwareVersion "2.1.0") ]
then
	sudo sed -i "s/net\.0/network/g"                                        /var/lib/lxc/$SeedContainerName/config
	sudo sed -i "s/\#marker//g"                                             /var/lib/lxc/$SeedContainerName/config
	sudo lxc-update-config -c                                               /var/lib/lxc/$SeedContainerName/config
	sudo sed -i "s/lxc\.net\.1/#markerlxc\.net\.1/g"          		/var/lib/lxc/$SeedContainerName/config
	sudo sed -i "s/lxc\.net\.2/#markerlxc\.net\.2/g"          		/var/lib/lxc/$SeedContainerName/config
	sudo sed -i "s/lxc\.net\.3/#markerlxc\.net\.3/g"          		/var/lib/lxc/$SeedContainerName/config
	sudo sed -i "s/lxc\.net\.4/#markerlxc\.net\.4/g"          		/var/lib/lxc/$SeedContainerName/config
	sudo sed -i "s/lxc\.net\.5/#markerlxc\.net\.5/g"          		/var/lib/lxc/$SeedContainerName/config
	sudo sed -i "s/lxc\.net\.6/#markerlxc\.net\.6/g"          		/var/lib/lxc/$SeedContainerName/config
fi

sleep 5

clear

echo ''
echo "=============================================="
echo "Configure NTP to run in LXC containers ...    "
echo "=============================================="
echo ''

sudo touch 									   /usr/share/lxc/config/common.conf.d/01-oracle-gi-ntp.conf
sudo sh -c "echo 'lxc.cap.drop ='						>> /usr/share/lxc/config/common.conf.d/01-oracle-gi-ntp.conf"
sudo sh -c "echo 'lxc.cap.drop = mac_admin mac_override sys_module sys_rawio'	>> /usr/share/lxc/config/common.conf.d/01-oracle-gi-ntp.conf" 
sudo cat /usr/share/lxc/config/common.conf.d/01-oracle-gi-ntp.conf
echo ''

if [ $LinuxFlavor = 'Ubuntu' ]
then
	sudo aa-complain /usr/sbin/ntpd
	echo 'sudo aa-complain /usr/sbin/ntpd'
fi

echo ''
echo "=============================================="
echo "Done: Configure NTP to run in LXC containers. "
echo "=============================================="
echo ''

sleep 5

clear

echo ''
echo "=============================================="
echo "Done: $SeedContainerName Oracle GI 18c config "
echo "=============================================="
echo ''

sleep 5

clear

